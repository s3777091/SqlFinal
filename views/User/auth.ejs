<!DOCTYPE html>
<html lang="zxx">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Login Lazada Shopping">
    <meta name="keywords" content="Lazada, product, shopping">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Login Lazada</title>

    <!-- Css Styles -->
    <link rel="stylesheet" href="/css/auth.css" type="text/css">
</head>

<div class="form-structor">

    <div class="signup slide-up">
        <h2 class="form-title" id="signup"><span>or</span>Sign up</h2>
        <div class="form-holder">
            <input type="text" id="sign-up-name" class="input" placeholder="Name" />
            <!-- <input type="text" id="sign-up-type" class="input" placeholder="Type" /> -->
            <input type="email" id="sign-up-email" class="input" placeholder="Email" />
            <input type="password" id="sign-up-password" class="input" placeholder="Password" />
            <select class="input" name="role" id="role" style="width: 95%;">
                <option value="admin">admin</option>
                <option value="user">user</option>
                <option value="seller">seller</option>
            </select>
            <div id="error-mess" style="padding: 20px;">Can't create an account. </div>
            <div id="success-mess" style="padding: 20px;">Sign up success</div>
        </div>
        <button class="submit-btn" id="submit-signUp-btn">Sign up</button>
    </div>


    <div class="login">
        <div class="center">
            <h2 class="form-title" id="login"><span>or</span>Log in</h2>

            <% if (errorMessage) { %>
                <p class="error-message">
                    <%= errorMessage %>
                </p>
                <% } %>


                    <form action="/users/sign_in" class="form-holder" method="post">
                        <input type="text" name="username" class="input" placeholder="User Name" required />

                        <input type="password" name="password" class="input" placeholder="Password" required />

                        <button type="submit" class="submit-btn">Log in</button>
                    </form>

        </div>
    </div>
</div>

<script>
    const baseURL = "http://localhost:7000"

    const loginBtn = document.getElementById('login');
    const signupBtn = document.getElementById('signup');

    const submitSignUpBtn = document.getElementById("submit-signUp-btn");
    var errorMessage = document.getElementById("error-mess");

    var successMessage = document.getElementById("success-mess");

    errorMessage.style.display = "none";
    successMessage.style.display = "none";

    submitSignUpBtn.addEventListener('click', async (e) => {
        errorMessage.style.innerHTML = "";
        var role = document.getElementById("role");
        var data = {
            username: document.getElementById("sign-up-name").value,
            email: document.getElementById("sign-up-email").value,
            password: document.getElementById("sign-up-password").value,
            roles: [role.value]
        };

        const response = await postData(baseURL + "/users/sign_up", data);


        if (response.status >= 200 && response.status <= 299) {
            successMessage.style.display = "block";
            setTimeout(function () {
                window.location.href = "/users";
            }, 1000);
        } else {
            errorMessage.style.display = "block";
            response.json().then((data) => {
                errorMessage.innerText += `\nError: ${data.message}`;
            });
        }
    });


    loginBtn.addEventListener('click', (e) => {
        let parent = e.target.parentNode.parentNode;
        Array.from(e.target.parentNode.parentNode.classList).find((element) => {
            if (element !== "slide-up") {
                parent.classList.add('slide-up')
            } else {
                signupBtn.parentNode.classList.add('slide-up')
                parent.classList.remove('slide-up')
            }
        });
    });

    signupBtn.addEventListener('click', (e) => {
        let parent = e.target.parentNode;
        Array.from(e.target.parentNode.classList).find((element) => {
            if (element !== "slide-up") {
                parent.classList.add('slide-up')
            } else {
                loginBtn.parentNode.parentNode.classList.add('slide-up')
                parent.classList.remove('slide-up')
            }
        });
    });

    async function postData(url = "", data = {}) {
        // Default options are marked with *
        const response = await fetch(url, {
            method: "POST", // *GET, POST, PUT, DELETE, etc.
            headers: {
                "Content-Type": "application/json",
                // 'Content-Type': 'application/x-www-form-urlencoded',
            },
            redirect: "follow", // manual, *follow, error
            referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
            body: JSON.stringify(data), // body data type must match "Content-Type" header
        });
        return response; // parses JSON response into native JavaScript objects
    }
</script>