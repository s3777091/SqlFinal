
<!DOCTYPE html>
<html lang="zxx">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Login Lazada Shopping">
    <meta name="keywords" content="Lazada, product, shopping">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Login Lazada</title>

    <!-- Css Styles -->
    <link rel="stylesheet" href="/css/auth.css" type="text/css">
</head>

<div class="form-structor">


    <div class="signup slide-up">
        <h2 class="form-title" id="signup"><span>or</span>Sign up</h2>
        <div class="form-holder">
            <input type="text" id="sign-up-name" class="input"  placeholder="Name" />
            <!-- <input type="text" id="sign-up-type" class="input" placeholder="Type" /> -->
            <input type="email" id="sign-up-email" class="input" placeholder="Email" />
            <input type="password" id="sign-up-password" class="input" placeholder="Password" />
            <div id="error-mess" style="padding: 20px;" >Can't create an account. Error: </div>
            <div id="success-mess" style="padding: 20px;">Sign up success</div>
        </div>
        <button class="submit-btn" id ="submit-signUp-btn">Sign up</button>
    </div>


    <div class="login">
        <div class="center">
            <h2 class="form-title" id="login"><span>or</span>Log in</h2>

            <% if (errorMessage) { %>
                <p class="error-message"><%= errorMessage %></p>
            <% } %>


            <div class="form-holder" method="post">
                <input type="text" name="username" class="input" id = "sign-in-username" placeholder="User Name" required/>
                <input type="password" name="password" class="input" id = "sign-in-password" placeholder="Password" required/>
                <div id="error-mess-sign-in" style="padding: 20px;" >Can't create an account. Error: </div>
                <div id="success-mess-sign-in" style="padding: 20px;">Sign in success</div>
                <button class="submit-btn" id = "submit-signIn-btn">Log in</button>
            </div>
            
        </div>
    </div>
</div>

<script>
    console.clear();
    const baseURL = "http://localhost:7001/users" 
    const loginBtn = document.getElementById('login');
    const signupBtn = document.getElementById('signup');
    const submitSignUpBtn = document.getElementById("submit-signUp-btn");
    const submitSignInBtn = document.getElementById("submit-signIn-btn");
    var errorMessage = document.getElementById("error-mess");
    var errorMessageSignIn = document.getElementById("error-mess-sign-in");
    var successMessage = document.getElementById("success-mess");
    var successMessageSignIn = document.getElementById("success-mess-sign-in");
    errorMessage.style.display = "none"; 
    errorMessageSignIn.style.display = "none";
    successMessage.style.display = "none";
    successMessageSignIn.style.display = "none";
    submitSignInBtn.addEventListener('click',async (e) =>{
        errorMessageSignIn.style.innerHTML = "";
        var data = {
                    username: document.getElementById("sign-in-username").value,
                    password: document.getElementById("sign-in-password").value,
                    };
        const response = await postData(baseURL+"/sign_in",data)
        if(response.status === 200){
            successMessageSignIn.style.display = "block"; 
                    setTimeout(function() {
                        window.location.href = "/";                        
                    }, 1000);
        }
        if(response.status === 400){
            errorMessageSignIn.style.display = "block"; 
                response.json().then((data) => {
                    errorMessageSignIn.style.innerHTML += data ;
            });
        }    
    });
    submitSignUpBtn.addEventListener('click',async (e) =>{
        errorMessage.style.innerHTML = "";
        var data = {
            username: document.getElementById("sign-up-name").value,
            email: document.getElementById("sign-up-email").value,
            password: document.getElementById("sign-up-password").value,
            roles: ["admin"]
        };
        const response = await postData(baseURL+"/sign_up",data)
        console.log(response)
        if(response.status === 200){
            successMessage.style.display = "block"; 
            setTimeout(function() {
                window.location.href = "/users";                        
                }, 1000);
        }
        if(response.status === 400){
                errorMessage.style.display = "block"; 
                response.json().then((data) => {
                    errorMessage.style.innerHTML += data ;
            });
        }    
    });
    loginBtn.addEventListener('click', (e) => {
        let parent = e.target.parentNode.parentNode;
        Array.from(e.target.parentNode.parentNode.classList).find((element) => {
            if (element !== "slide-up") {
                parent.classList.add('slide-up')
            } else {
                signupBtn.parentNode.classList.add('slide-up')
                parent.classList.remove('slide-up')
            }
        });
    });

    signupBtn.addEventListener('click', (e) => {
        let parent = e.target.parentNode;
        Array.from(e.target.parentNode.classList).find((element) => {
            if (element !== "slide-up") {
                parent.classList.add('slide-up')
            } else {
                loginBtn.parentNode.parentNode.classList.add('slide-up')
                parent.classList.remove('slide-up')
            }
        });
    });
    async function postData(url = "", data = {}) {
                // Default options are marked with *
                const response = await fetch(url, {
                    method: "POST", // *GET, POST, PUT, DELETE, etc.
                    mode: "cors", // no-cors, *cors, same-origin
                    cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
                    credentials: "same-origin", // include, *same-origin, omit
                    headers: {
                        "Content-Type": "application/json",
                        // 'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    redirect: "follow", // manual, *follow, error
                    referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                    body: JSON.stringify(data), // body data type must match "Content-Type" header
                });
                return response; // parses JSON response into native JavaScript objects
            }
</script>